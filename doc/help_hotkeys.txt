*help_hotkeys.txt*  VIM hotkeys cheet sheet

==============================================================================
Contents                                *help_hotkeys* *help_hotkeys-contents*

|help_hotkeys-user_keys|     User defined keys
|help_hotkeys-folder|        Folder
|help_hotkeys-jumps|         Jumps
|help_hotkeys-word_repeat|   Word repeat
|help_hotkeys-auto_complete| Auto complete
|help_hotkeys-pager|         Pager
|help_hotkeys-split_window|  Split window
|help_hotkeys-vimdiff|       VimDiff
|help_hotkeys-surround|      Surround
|help_hotkeys-yankring|      YankRing
|help_hotkeys-cscope|        CScope
|help_hotkeys-source_help|   Source help doc changed

==============================================================================
User defined keys                                     *help_hotkeys-user_keys*

" Hotkeys
    noremap <F1> :NERDTreeToggle<CR>
    noremap <F2> :TagbarToggle<CR>
    noremap <F3> :MBEToggle<CR>
    set pastetoggle=<F4>
    noremap <F5> :SaveSession!<CR>
    noremap <F6> :NewSession<CR>
    noremap <F7> :OpenSession!<CR>
    noremap <F8> :DeleteSession<CR>
    noremap <F9> :GundoToggle<CR>
    noremap <F10> :call SetEncoding()<CR>
    noremap <F11> :retab<CR> :call RTrailing()<CR>
    noremap <F12> :help_hotkeys<CR>
" Rebind the vim help file
    inoremap <F1> <ESC> :NERDTree <CR>
    noremap <leader>h :help<CR>
    noremap <leader>k :help_hotkeys<CR>
" Switch indent modes
    noremap <leader>1 :call ReadMode()<CR>
    noremap <leader>2 :call EditMode()<CR>
    noremap <leader>3 :call KernelMode()<CR>
" Gen help docs
    noremap <leader>t :helptags ~/.vim/doc<CR>
" Set line/file encodings
    noremap <leader>e :call SetEncoding()<CR>
" Force save the file by sudo privieges
    noremap <leader>w :w !sudo tee %<CR>
" Diff file with current modify
    noremap <leader>d :DiffSaved<CR>
" Switch buffers
    noremap <C-left> :MBEbp<CR>
    noremap <C-right> :MBEbn<CR>
    noremap <C-up> :BufExplorer<CR>
    noremap <C-down> :MBEbd<CR>
    noremap <leader><left> :MBEbp<CR>
    noremap <leader><right> :MBEbn<CR>
    noremap <leader><up> :BufExplorer<CR>
    noremap <leader><down> :MBEbd<CR>
" Switch between windows
    noremap <C-H> <C-W>h
    noremap <C-L> <C-W>l
    noremap <C-J> <C-W>j
    noremap <C-K> <C-W>k
" Split windows
    nnoremap <C-\> :vsp<CR>
    nnoremap <C-_> :sp<CR>
" Split windows size
    noremap <C-W>+ :resize +10<CR>
    noremap <C-W>- :resize -10<CR>
    noremap <C-W>> :vertical resize +10<CR>
    noremap <C-W>< :vertical resize -10<CR>
    noremap <C-W>. :vertical resize +20<CR>
    noremap <C-W>, :vertical resize -20<CR>
" Unbind the C-X for other usages
    noremap <C-X> <NOP>
    " obtain/pull difference
    noremap <C-X>. do
    noremap <C-X>, dp
    noremap <C-X>> do
    noremap <C-X>< dp
    " number add/sub 1
    noremap <C-X>= <C-A>
    noremap <C-X>+ <C-A>
    noremap <C-X>- <C-X>
    noremap <C-X>_ <C-X>
" Plugin: vim-session
    noremap <C-S> <NOP>
    noremap <C-S>d :DeleteSession<CR>
    noremap <C-S>n :NewSession<CR>
    noremap <C-S>s :SaveSession!
    noremap <C-S>o :OpenSession!<CR>
" Plugin: gtags
    noremap <leader>g :Gtags<CR>
    noremap <leader>s :Gtags -s<CR>
    noremap <leader>r :Gtags -r<CR>
    noremap <leader>z :cp<CR>
    noremap <leader>x :cn<CR>
" Plugin: ctrlp
    " default bindings conflict with yankring bindings
    noremap <leader>p :CtrlPMixed<CR>
" Plugin: gundo
    noremap <leader>u :GundoToggle<CR>
" Plugin: YouCompleteMe
    noremap <C-j> :YcmCompleter GoTo<CR>
" Plugin: SignifyToggle
    noremap <leader>4 :SignifyToggle<CR>

==============================================================================
Folder                                                   *help_hotkeys-folder*

zo: open
zO: open all
zc: close
zC: close all

==============================================================================
Jumps                                                     *help_hotkeys-jumps*

<C-O>: jump back to the previous (older) location
<C-I>: jump forward to the next (newer) location

[{: jump to the beginning of a C code block (while, switch, if etc)
]}: jump to the end of a C code block (while, switch, if etc)
[(: jump to the beginning of a parenthesis
}): jump to the end of a parenthesis
[[: sections backward or to the previous '{' in the first column.
]]: sections forward or to the next '{' in the first column.
[]: sections backward or to the previous '}' in the first column.

==============================================================================
Word repeat                                         *help_hotkeys-word_repeat*

In insert mode:
<C-y>: repeat up line
<C-e>: repeat down line

numbers:
<C-a>: n++
<C-x>: n--

==============================================================================
Auto complete                                     *help_hotkeys-auto_complete*

<C-p>: previous
<C-n>: next
<C-i>: singal line
<C-f>: file name

==============================================================================
Pager                                                     *help_hotkeys-pager*

<C-u>: up half page
<C-d>: down half page
<C-f>: forward one page
<C-b>: backup on page

==============================================================================
Split window                                        *help_hotkeys-split_window*

sp: Split current window in two.
vsp: Split vertically.
<C-w> [+|-]: resize windows
<C-w> [<|>]: resize windows with a vertical split
<C-w> _: maximize current window
<C-w> =: make all equal size

==============================================================================
VimDiff                                                 *help_hotkeys-vimdiff*

do: o for "obtain"
dp: p for "put"

==============================================================================
Surround                                               *help_hotkeys-surround*

Normal mode
-----------
ds: delete a surrounding
cs: change a surrounding
ys: add a surrounding
yS: add a surrounding and place the surrounded text on a new line + indent it
yss: add a surrounding to the whole line
ySs: add a surrounding to the whole line, place it on a new line + indent it
ySS: same as ySs

Visual mode
-----------
s: in visual mode, add a surrounding
S: in visual mode, add a surrounding but place text on new line + indent it

Insert mode
-----------
<C-s>: in insert mode, add a surrounding
<C-s><C-s>: in insert mode, add a new line + surrounding + indent
<C-g>s: same as <CTRL-s>
<C-g>S: same as <CTRL-s><CTRL-s>

The . command will work with ds, cs, and yss if you install repeat.vim.

==============================================================================
YankRing                                               *help_hotkeys-yankring*

<C-p>: (P for previous) to replace the text last pasted
<C-n>: (N for next) to replace the previous pasted

Tips:
yiw: Copy the current word
viwp: Replace the current word with the clipboard contents

==============================================================================
CScope                                                   *help_hotkeys-cscope*

:cs add {cscope.out path}
:cs Usage Tip
<C-\> c: Find functions calling this function
<C-\> d: Find functions called by this function
<C-\> e: Find this egrep pattern
<C-\> f: Find this file
<C-\> g: Find this definition
<C-\> i: Find files #including this file
<C-\> s: Find this C symbol
<C-\> t: Find assignments to

==============================================================================
Source help doc changed                             *help_hotkeys-source_help*

:helptags ~/.vim/doc
